@model TomasinoLink.ViewModels.ProfileViewModel

@{
    ViewData["Title"] = "Edit Profile";
}

<h2>Edit Profile</h2>

@using (Html.BeginForm("EditProfiles", "EditProfile", FormMethod.Post))
{
    @Html.AntiForgeryToken()

    <div class="form-group">
        @Html.LabelFor(model => model.NameDisplay)
        @Html.TextBoxFor(model => model.NameDisplay, new { @class = "form-control" })
        @Html.ValidationMessageFor(model => model.NameDisplay)
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Bio)
        @Html.TextAreaFor(model => model.Bio, new { @class = "form-control" })
        @Html.ValidationMessageFor(model => model.Bio)
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Interest)
        @Html.TextAreaFor(model => model.Interest, new { @class = "form-control" })
        @Html.ValidationMessageFor(model => model.Interest)
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.Location)
        @Html.TextAreaFor(model => model.Location, new { @class = "form-control" })
        @Html.ValidationMessageFor(model => model.Location)
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.FacultyId)
        @Html.DropDownListFor(model => model.FacultyId, Model.FacultyList, "Select Faculty", new { @class = "form-control" })
        @Html.ValidationMessageFor(model => model.FacultyId)
    </div>

    <button type="submit" class="btn btn-primary">Update Profile</button>
}
<footer>
    <!-- Your footer content -->
</footer>
<style>
    html {
        height: 100%; /* Ensure html takes full height */
    }

    body {
        margin: 0; /* Reset default margin */
        height: 100%; /* Ensure body takes full height */
        background: linear-gradient(white, #FEC00F); /* Apply gradient to body */
        display: flex; /* Use flexbox layout */
        flex-direction: column; /* Stack flex children vertically */
    }

    .container {
        flex: 1; /* Flex container will take up remaining space */
        display: flex; /* Use flexbox layout */
        flex-direction: column; /* Stack flex children vertically */
    }

    .content {
        flex: 1; /* Content will expand to take available space */
    }
</style>